###############################################################################
# Job 2: Notifying through Mail
###############################################################################
  send_email:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Generate dynamic approval links
        id: links
        run: |
          # Read built images JSON from build job
          IMAGES='${{ needs.build.outputs.built_images }}'
          REPO="${{ github.repository }}"
          WORKFLOW="approvesign.yml"

          # Handle case when no images were built
          COUNT=$(echo "$IMAGES" | jq 'length')
          if [ "$COUNT" -eq 0 ]; then
            echo "links=NO_IMAGES" >> $GITHUB_OUTPUT
          else
            # Generate GitHub Actions workflow run links for each image
            LINKS=$(echo "$IMAGES" | jq -r --arg repo "$REPO" --arg wf "$WORKFLOW" '
              .[] | "https://github.com/\($repo)/actions/workflows/\($wf)?inputs[image_uri]=\(.)"'
            )
            echo "links<<EOF" >> $GITHUB_OUTPUT
            echo "$LINKS" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Send email via SendGrid API
        env:
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          TO_EMAILS: "mailtosiva369@gmail.com,sivaprasad3697@gmail.com"
          FROM_EMAIL: mailtosiva369@gmail.com
          SUBJECT: GitHub Actions Workflow Notification
        run: |
          LINKS="${{ steps.links.outputs.links }}"

          # Build email body
          if [ "$LINKS" = "NO_IMAGES" ]; then
            BODY_TEXT="Hello,\n\nNo Docker images were built in this run. Nothing to approve.\n\nBest regards,\nGitHub Actions Bot"
          else
            BODY_TEXT="Hello,\n\nThe following Docker images have been built and are awaiting your approval:\n\n"
            while IFS= read -r link; do
              BODY_TEXT+="ðŸ‘‰ $link\n"
            done <<< "$LINKS"
            BODY_TEXT+="\nBest regards,\nGitHub Actions Bot"
          fi

          # Convert recipients to JSON array
          TO_RECIPIENTS_JSON=$(echo "$TO_EMAILS" | tr ',' '\n' | sed 's/^[[:space:]]*//;s/[[:space:]]*$//' | awk '{printf "{\"email\":\"%s\"},", $0}' | sed 's/,$//' | awk '{print "[" $0 "]"}')

          # Build SendGrid JSON payload
          JSON_PAYLOAD=$(jq -n \
            --argjson to_recipients "$TO_RECIPIENTS_JSON" \
            --arg from_email "$FROM_EMAIL" \
            --arg subject "$SUBJECT" \
            --arg body_text "$BODY_TEXT" \
            '{
              personalizations: [{ to: $to]()
